name: Build and Deploy JAR Applications

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v1
        with:
          java-version: '19'

      - name: Build project with Maven
        run: mvn clean package

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'

    steps:
      - name: Set up SSH private key
        run: echo "${{ secrets.AZURE_SSH_KEY }}" > $GITHUB_WORKSPACE/azure_key.pem

      - name: Set permissions on the SSH key
        run: chmod 600 $GITHUB_WORKSPACE/azure_key.pem

      - name: Trim spaces and check AZURE_VM_IP
        run: |
          # Remove leading/trailing spaces from AZURE_VM_IP
          AZURE_VM_IP=$(echo "${{ secrets.AZURE_VM_IP }}" | xargs)
          echo "Trimmed AZURE_VM_IP is: '$AZURE_VM_IP'"
          
          # Check if the variable is empty
          if [[ -z "$AZURE_VM_IP" ]]; then
            echo "Error: AZURE_VM_IP is empty or invalid!"
            exit 1
          fi
      - name: Test SSH connection to VM
        run: |
          echo "Testing SSH connection to VM with IP: $AZURE_VM_IP"
          ssh -o StrictHostKeyChecking=no -i $GITHUB_WORKSPACE/azure_key.pem azureuser@$AZURE_VM_IP 'echo "SSH connection successful!"'
      - name: Deploy and start JAR applications
        run: |
          for JAR in $(find . -name "*.jar"); do
            APP_NAME=$(basename $JAR | cut -d '-' -f 1)
            echo "Deploying $APP_NAME..."
          
            scp -o StrictHostKeyChecking=no -i $GITHUB_WORKSPACE/azure_key.pem $JAR azureuser@$AZURE_VM_IP:/home/azureuser/
            ssh -o StrictHostKeyChecking=no -i $GITHUB_WORKSPACE/azure_key.pem azureuser@$AZURE_VM_IP \
              "nohup java -jar /home/azureuser/$(basename $JAR) > /dev/null 2>&1 &"
            sleep 10
          done